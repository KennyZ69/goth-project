package api

import (
"fmt"
"strconv"
)

templ Chat(data ChatData) {

{{ wsCon := fmt.Sprintf("/ws?chat_id=%v", data.ChatId) }}
<div class="flex flex-col h-screen w-full max-w-full max-h-screen border-b border-gray-300 p-4" hx-ext="ws" ws-connect={
	wsCon }>
	// <input type="hidden" id="currentUserId" value={ data.CurrentUser.Id } /> <!-- Hidden input for user ID -->
	<div class="text-2xl font-bold" id="chatUsername">
		{ data.Friend.Username }
	</div>
	<div class="p-4 space-y-4 max-h-full flex-grow" id="chatMessages">
		<div class="flex bg-gray-100 p-4 w-full h-full max-h-full max-w-full flex-grow ">
			// <ul id="chat_room" hx-swap="beforeend" hx-swap-oob="beforeend">
				<ul id="chat_room" class="w-full h-full max-h-max max-w-full overflow-y-scroll">
					if data.Messages == nil {
					<div class="text-center justify-center text-2xl text-gray-500 mt-10">
						No messages yet. Say hello!
					</div>

					} else {

					for _, msg := range data.Messages {
					if data.CurrentUser.Id == msg.Client_id {
					<li class="flex mt-4 justify-end bg-blue-100 p-3 rounder-lg shadow max-w-xs">
						<div class="text-base font-bold mr-2 text-red-500">{ msg.Username }
						</div>

						<div class="text-sm text-gray-800">{ msg.Text }</div>
						<div class="text-xs text-gray-500 mt-1">
							{
							msg.Created_at.GoString() }
						</div>
					</li>
					}
					if data.CurrentUser.Id != msg.Client_id {
					<!-- Friend's message -->
					<li class="flex mt-4 justify-start bg-gray-100 p-3 rounded-lg shadow max-w-xs">
						<div class="text-base font-bold mr-2 text-red-500">{ msg.Username }
						</div>

						<div class="text-sm text-gray-800">{ msg.Text }</div>
						<div class="text-xs text-gray-500 mt-1">
							{
							msg.Created_at.GoString() }
						</div>
					</li>
					}
					}
					}


				</ul>
		</div>

	</div>
	<!-- Input Bar -->
	<div class="border-t border-gray-300 p-4 flex items-center">
		// some emoji icon could be here
		<form id="chatForm" class="w-full flex flex-grow" ws-send autocomplete="off">
			<input type="hidden" id="chat_id" name="chat_id" value={ strconv.FormatUint(uint64(data.ChatId),
				10) } />
			<input name="text" id="chatInput" type="text" placeholder="Type a message..." rows="2"
				class="flex-grow p-3 border rounded-lg focus:outline-none focus:ring focus:border-blue-300 resize-none"></input>
			<button id="sendButton" type="submit"
				class="ml-2 bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 justify-end">
				Send
			</button>
		</form>
	</div>
</div>
<script>
	console.log('loaded the script')
	const currentUserId = parseInt(`{ data.CurrentUser.Id }`)
	const chatId = document.getElementById("chat_id")
	const ws = new WebSocket(`ws://http://127.0.0.1:7331/ws?chat_id=${chatId}`)

	// When a message is received from the WebSocket server
	ws.onmessage = function (event) {
		const message = JSON.parse(event.data);
		appendMessageToChat(message);
	};

	// Function to append a message to the chat
	function appendMessageToChat(message) {
		const chatRoom = document.getElementById('chat_room');

		// Create a new list item for the message
		const messageElement = document.createElement('li');
		messageElement.classList.add('p-3', 'mt-4', 'rounded-lg', 'shadow', 'max-w-xs');

		if (message.sender_id == currentUserId {
			messageElement.classList.add('bg-blue-100', 'text-right');
		} else {
			messageElement.classList.add('bg-gray-100', 'text-left');
		}

		messageElement.innerHTML = `
        <div class="text-sm text-gray-800">${message.text}</div>
        <div class="text-xs text-gray-500 mt-1">${new Date(message.created_at).toLocaleString()}</div>
    `;

		chatRoom.appendChild(messageElement);

		// Scroll to the bottom after appending
		chatRoom.scrollTop = chatRoom.scrollHeight;
	}

	// Handle sending the message via WebSocket
	document.getElementById('chatForm').addEventListener('submit', function (event) {
		event.preventDefault();

		const messageInput = document.getElementById('chatInput');
		const messageText = messageInput.value;

		if (messageText.trim() != "") {
			const message = {
				Chat_id: chatId,
				Text: messageText,
				sender_id: currentUserId
			};

			// Send the message via WebSocket
			ws.send(JSON.stringify(message));

			// Clear the input
			messageInput.value = '';
		}
	});
</script>
}
