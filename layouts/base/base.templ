package base

import (
"gothstarter/layouts/components"
"gothstarter/database"
"net/http"
"strings"
"fmt"
"gothstarter/layouts/features"
)

templ Base(r *http.Request, data bool) {
<!DOCTYPE html>
<html lang="en">

<head>
	<title>TennisIsUs</title>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<link rel="stylesheet" href="/public/styles.css" />

	<!-- HTMX -->
	<script src="https://unpkg.com/htmx.org@1.9.10"
		integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC"
		crossorigin="anonymous"></script>
	<!-- HTMX Websockets extension https://htmx.org/extensions/web-sockets/ -->
	<script src="https://unpkg.com/htmx.org/dist/ext/ws.js"></script>

	<script src="https://cdn.tailwindcss.com" defer async></script>

	<script src="https://unpkg.com/alpinejs" async defer></script>

	<link rel="apple-touch-icon" sizes="180x180" href="/public/favicon/apple-touch-icon.png" />
	<link rel="icon" type="image/png" sizes="32x32" href="/public/favicon/favicon-32x32.png" />
	<link rel="icon" type="image/png" sizes="16x16" href="/public/favicon/favicon-16x16.png" />
	<link rel="manifest" href="/public/favicon/site.webmanifest" />

	<style>
		html {
			scroll-behavior: smooth;
		}
	</style>
</head>

<body class="antialiased bg-slate-500" hx-ext="reset-on-success">
	if strings.Contains(r.URL.Path, "/inbox/"){
	@components.Inbox()
	}
	if strings.Contains(r.URL.Path, "/chat-try"){

	{{ user, err := components.GetUserByCookie(r) }}
	if err != nil {
	{{ fmt.Printf("error getting user on chat-try: %v\n", err) }}
	}

	{{ auth, err := database.GetTokenByUsrId(database.DB, user.Id)}}
	if err != nil {
	{{ fmt.Printf("error getting user by cookie on the finder: %v\n", err) }}
	}

	@components.ChatTry(auth, user, r)
	}
	if strings.Contains(r.URL.Path, "/finder"){
	{{ user, err := components.GetUserByCookie(r) }}
	if err != nil {
	{{ fmt.Printf("error getting the user on finder:%v\n", err) }}
	}
	{{ auth, err := database.GetTokenByUsrId(database.DB, user.Id)}}

	if err != nil {
	{{ fmt.Printf("error getting user by cookie on the finder: %v\n", err) }}
	}
	@features.Finder(auth, user.Username, r)
	}
	if strings.Contains(r.URL.Path, "/login") {
	@components.Login()
	}

	if strings.Contains(r.URL.Path, "/signup") {
	@components.Signup()
	}

	if strings.Contains(r.URL.Path, "/profile/") {

	{{ nameFromPath := r.URL.Path[len("/profile/"):] }}
	{{ usr, err := database.GetUserByName(database.DB, nameFromPath) }}
	{{ usrDetails, err := database.GetDetailsById(database.DB, usr.Id) }}
	{{ usr.Details = *usrDetails }}

	if err != nil {
	// Do some error later
	{{ fmt.Printf("error getting the user for the profile: %v\n", err) }}
	}
	/* Here Imma be checking for whether the user is accesing his own profile page or not and render it
	accordingly */
	{{ user, err := components.GetUserByCookie(r) }}
	if err != nil{
	{{ fmt.Printf("error getting the user via cookie: %v\n", err)}}
	}

	if user.Username == usr.Username && user.Id == usr.Id{


	@components.OwnProfile(*usr)
	} else{

	@components.ElseProfile(*usr, r)
	}
	}

	if strings.Contains(r.URL.Path, "/requests/"){
	{{ user, err := components.GetUserByCookie(r) }}
	if err != nil {
	{{ fmt.Printf("error getting the user for requests page: %v\n", err) }}
	}
	{{ auth, err := database.GetTokenByUsrId(database.DB, user.Id)}}
	if err != nil {
	{{ fmt.Printf("error getting the auth for user on requests page: %v\n") }}
	}

	@components.Requests(*user, auth, r)
	}

	if r.URL.Path == "/" {
	@components.Navigation(data, r)
	@Body()
	@Footer()
	}
</body>
<script>
	document.addEventListener('alpine:init', () => {
		Alpine.data('navbar', () => ({
			showNavbar: true,
			lastScrollY: window.scrollY,
			init() {
				window.addEventListener('scroll', () => {
					let currentScrollY = window.scrollY;
					if (currentScrollY < this.lastScrollY || currentScrollY <= 100) {
						this.showNavbar = true;
					} else {
						this.showNavbar = false;
					}
					this.lastScrollY = currentScrollY;
				});
			}
		}))
	})
</script>

</html>
}
