// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package base

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"gothstarter/database"
	"gothstarter/layouts/components"
	"gothstarter/layouts/features"
	"net/http"
	"strings"
)

func Base(r *http.Request, data bool, username string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><title>TennisIsUs</title><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><link rel=\"stylesheet\" href=\"/public/styles.css\"><script src=\"https://cdn.tailwindcss.com\" defer async></script><script src=\"/public/htmx.min.js\" defer async></script><script src=\"https://unpkg.com/alpinejs\" async defer></script><link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/public/favicon/apple-touch-icon.png\"><link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/public/favicon/favicon-32x32.png\"><link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/public/favicon/favicon-16x16.png\"><link rel=\"manifest\" href=\"/public/favicon/site.webmanifest\"><style>\n\t\thtml {\n\t\t\tscroll-behavior: smooth;\n\t\t}\n\t</style></head><body class=\"antialiased bg-slate-500\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if strings.Contains(r.URL.Path, "/finder") {
			user, err := components.GetUserByCookie(r)
			auth, err := database.GetTokenByUsrId(database.DB, user.Id)
			if err != nil {
				fmt.Printf("error getting user by cookie on the finder: %v\n", err)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = features.Finder(auth, user.Username).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if strings.Contains(r.URL.Path, "/login") {
			templ_7745c5c3_Err = components.Login().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if strings.Contains(r.URL.Path, "/signup") {
			templ_7745c5c3_Err = components.Signup().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if strings.Contains(r.URL.Path, "/profile/") {
			nameFromPath := r.URL.Path[len("/profile/"):]
			usr, err := database.GetUserByName(database.DB, nameFromPath)
			usrDetails, err := database.GetDetailsById(database.DB, usr.Id)
			usr.Details = *usrDetails
			if err != nil {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				fmt.Printf("error getting the user for the profile: %v\n", err)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("  ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			user, err := components.GetUserByCookie(r)
			if err != nil {
				fmt.Printf("error getting the user via cookie: %v\n", err)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if user.Username == usr.Username && user.Id == usr.Id {
				templ_7745c5c3_Err = components.OwnProfile(*usr).Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = components.ElseProfile(*usr).Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		}
		if r.URL.Path == "/" {
			templ_7745c5c3_Err = components.Navigation(data, username).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = Body().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = Footer().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</body><script>\n\tdocument.addEventListener('alpine:init', () => {\n\t\tAlpine.data('navbar', () => ({\n\t\t\tshowNavbar: true,\n\t\t\tlastScrollY: window.scrollY,\n\t\t\tinit() {\n\t\t\t\twindow.addEventListener('scroll', () => {\n\t\t\t\t\tlet currentScrollY = window.scrollY;\n\t\t\t\t\tif (currentScrollY < this.lastScrollY || currentScrollY <= 100) {\n\t\t\t\t\t\tthis.showNavbar = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.showNavbar = false;\n\t\t\t\t\t}\n\t\t\t\t\tthis.lastScrollY = currentScrollY;\n\t\t\t\t});\n\t\t\t}\n\t\t}))\n\t})\n</script></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
